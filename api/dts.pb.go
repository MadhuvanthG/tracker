// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dts.proto

package api

import (
	context "context"
	fmt "fmt"
	api "github.com/deps-cloud/des/api"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Direction int32

const (
	Direction_UPSTREAM   Direction = 0
	Direction_DOWNSTREAM Direction = 1
)

var Direction_name = map[int32]string{
	0: "UPSTREAM",
	1: "DOWNSTREAM",
}

var Direction_value = map[string]int32{
	"UPSTREAM":   0,
	"DOWNSTREAM": 1,
}

func (x Direction) String() string {
	return proto.EnumName(Direction_name, int32(x))
}

func (Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{0}
}

type SourceInformation struct {
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SourceInformation) Reset()         { *m = SourceInformation{} }
func (m *SourceInformation) String() string { return proto.CompactTextString(m) }
func (*SourceInformation) ProtoMessage()    {}
func (*SourceInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{0}
}
func (m *SourceInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceInformation.Unmarshal(m, b)
}
func (m *SourceInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceInformation.Marshal(b, m, deterministic)
}
func (m *SourceInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceInformation.Merge(m, src)
}
func (m *SourceInformation) XXX_Size() int {
	return xxx_messageInfo_SourceInformation.Size(m)
}
func (m *SourceInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceInformation.DiscardUnknown(m)
}

var xxx_messageInfo_SourceInformation proto.InternalMessageInfo

func (m *SourceInformation) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type DependencyId struct {
	Organization         string   `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	Module               string   `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DependencyId) Reset()         { *m = DependencyId{} }
func (m *DependencyId) String() string { return proto.CompactTextString(m) }
func (*DependencyId) ProtoMessage()    {}
func (*DependencyId) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{1}
}
func (m *DependencyId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DependencyId.Unmarshal(m, b)
}
func (m *DependencyId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DependencyId.Marshal(b, m, deterministic)
}
func (m *DependencyId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DependencyId.Merge(m, src)
}
func (m *DependencyId) XXX_Size() int {
	return xxx_messageInfo_DependencyId.Size(m)
}
func (m *DependencyId) XXX_DiscardUnknown() {
	xxx_messageInfo_DependencyId.DiscardUnknown(m)
}

var xxx_messageInfo_DependencyId proto.InternalMessageInfo

func (m *DependencyId) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *DependencyId) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

type PutRequest struct {
	SourceInformation    *SourceInformation              `protobuf:"bytes,1,opt,name=sourceInformation,proto3" json:"sourceInformation,omitempty"`
	ManagementFiles      []*api.DependencyManagementFile `protobuf:"bytes,2,rep,name=managementFiles,proto3" json:"managementFiles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *PutRequest) Reset()         { *m = PutRequest{} }
func (m *PutRequest) String() string { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()    {}
func (*PutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{2}
}
func (m *PutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRequest.Unmarshal(m, b)
}
func (m *PutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRequest.Marshal(b, m, deterministic)
}
func (m *PutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRequest.Merge(m, src)
}
func (m *PutRequest) XXX_Size() int {
	return xxx_messageInfo_PutRequest.Size(m)
}
func (m *PutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRequest proto.InternalMessageInfo

func (m *PutRequest) GetSourceInformation() *SourceInformation {
	if m != nil {
		return m.SourceInformation
	}
	return nil
}

func (m *PutRequest) GetManagementFiles() []*api.DependencyManagementFile {
	if m != nil {
		return m.ManagementFiles
	}
	return nil
}

type PutResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutResponse) Reset()         { *m = PutResponse{} }
func (m *PutResponse) String() string { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()    {}
func (*PutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{3}
}
func (m *PutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutResponse.Unmarshal(m, b)
}
func (m *PutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutResponse.Marshal(b, m, deterministic)
}
func (m *PutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResponse.Merge(m, src)
}
func (m *PutResponse) XXX_Size() int {
	return xxx_messageInfo_PutResponse.Size(m)
}
func (m *PutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutResponse proto.InternalMessageInfo

func (m *PutResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PutResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Request struct {
	Language             string    `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	System               string    `protobuf:"bytes,2,opt,name=system,proto3" json:"system,omitempty"`
	Organization         string    `protobuf:"bytes,5,opt,name=organization,proto3" json:"organization,omitempty"`
	Module               string    `protobuf:"bytes,6,opt,name=module,proto3" json:"module,omitempty"`
	Direction            Direction `protobuf:"varint,7,opt,name=direction,proto3,enum=cloud.deps.rds.api.Direction" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{4}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Request) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *Request) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *Request) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

func (m *Request) GetDirection() Direction {
	if m != nil {
		return m.Direction
	}
	return Direction_UPSTREAM
}

type Response struct {
	Dependency           *DependencyId `protobuf:"bytes,1,opt,name=dependency,proto3" json:"dependency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{5}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetDependency() *DependencyId {
	if m != nil {
		return m.Dependency
	}
	return nil
}

type TieredResponse struct {
	Tier                 []*DependencyId `protobuf:"bytes,1,rep,name=tier,proto3" json:"tier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TieredResponse) Reset()         { *m = TieredResponse{} }
func (m *TieredResponse) String() string { return proto.CompactTextString(m) }
func (*TieredResponse) ProtoMessage()    {}
func (*TieredResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{6}
}
func (m *TieredResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TieredResponse.Unmarshal(m, b)
}
func (m *TieredResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TieredResponse.Marshal(b, m, deterministic)
}
func (m *TieredResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TieredResponse.Merge(m, src)
}
func (m *TieredResponse) XXX_Size() int {
	return xxx_messageInfo_TieredResponse.Size(m)
}
func (m *TieredResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TieredResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TieredResponse proto.InternalMessageInfo

func (m *TieredResponse) GetTier() []*DependencyId {
	if m != nil {
		return m.Tier
	}
	return nil
}

type GetSourcesRequest struct {
	Language             string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Organization         string   `protobuf:"bytes,5,opt,name=organization,proto3" json:"organization,omitempty"`
	Module               string   `protobuf:"bytes,6,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSourcesRequest) Reset()         { *m = GetSourcesRequest{} }
func (m *GetSourcesRequest) String() string { return proto.CompactTextString(m) }
func (*GetSourcesRequest) ProtoMessage()    {}
func (*GetSourcesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{7}
}
func (m *GetSourcesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSourcesRequest.Unmarshal(m, b)
}
func (m *GetSourcesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSourcesRequest.Marshal(b, m, deterministic)
}
func (m *GetSourcesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSourcesRequest.Merge(m, src)
}
func (m *GetSourcesRequest) XXX_Size() int {
	return xxx_messageInfo_GetSourcesRequest.Size(m)
}
func (m *GetSourcesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSourcesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSourcesRequest proto.InternalMessageInfo

func (m *GetSourcesRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *GetSourcesRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *GetSourcesRequest) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

type GetSourcesResponse struct {
	Source               *SourceInformation `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetSourcesResponse) Reset()         { *m = GetSourcesResponse{} }
func (m *GetSourcesResponse) String() string { return proto.CompactTextString(m) }
func (*GetSourcesResponse) ProtoMessage()    {}
func (*GetSourcesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{8}
}
func (m *GetSourcesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSourcesResponse.Unmarshal(m, b)
}
func (m *GetSourcesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSourcesResponse.Marshal(b, m, deterministic)
}
func (m *GetSourcesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSourcesResponse.Merge(m, src)
}
func (m *GetSourcesResponse) XXX_Size() int {
	return xxx_messageInfo_GetSourcesResponse.Size(m)
}
func (m *GetSourcesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSourcesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSourcesResponse proto.InternalMessageInfo

func (m *GetSourcesResponse) GetSource() *SourceInformation {
	if m != nil {
		return m.Source
	}
	return nil
}

type ListLanguagesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLanguagesRequest) Reset()         { *m = ListLanguagesRequest{} }
func (m *ListLanguagesRequest) String() string { return proto.CompactTextString(m) }
func (*ListLanguagesRequest) ProtoMessage()    {}
func (*ListLanguagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{9}
}
func (m *ListLanguagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLanguagesRequest.Unmarshal(m, b)
}
func (m *ListLanguagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLanguagesRequest.Marshal(b, m, deterministic)
}
func (m *ListLanguagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLanguagesRequest.Merge(m, src)
}
func (m *ListLanguagesRequest) XXX_Size() int {
	return xxx_messageInfo_ListLanguagesRequest.Size(m)
}
func (m *ListLanguagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLanguagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLanguagesRequest proto.InternalMessageInfo

type ListLanguagesResponse struct {
	Languages            []string `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLanguagesResponse) Reset()         { *m = ListLanguagesResponse{} }
func (m *ListLanguagesResponse) String() string { return proto.CompactTextString(m) }
func (*ListLanguagesResponse) ProtoMessage()    {}
func (*ListLanguagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{10}
}
func (m *ListLanguagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLanguagesResponse.Unmarshal(m, b)
}
func (m *ListLanguagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLanguagesResponse.Marshal(b, m, deterministic)
}
func (m *ListLanguagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLanguagesResponse.Merge(m, src)
}
func (m *ListLanguagesResponse) XXX_Size() int {
	return xxx_messageInfo_ListLanguagesResponse.Size(m)
}
func (m *ListLanguagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLanguagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLanguagesResponse proto.InternalMessageInfo

func (m *ListLanguagesResponse) GetLanguages() []string {
	if m != nil {
		return m.Languages
	}
	return nil
}

type ListOrganizationsRequest struct {
	Language             string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrganizationsRequest) Reset()         { *m = ListOrganizationsRequest{} }
func (m *ListOrganizationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListOrganizationsRequest) ProtoMessage()    {}
func (*ListOrganizationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{11}
}
func (m *ListOrganizationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrganizationsRequest.Unmarshal(m, b)
}
func (m *ListOrganizationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrganizationsRequest.Marshal(b, m, deterministic)
}
func (m *ListOrganizationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationsRequest.Merge(m, src)
}
func (m *ListOrganizationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListOrganizationsRequest.Size(m)
}
func (m *ListOrganizationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationsRequest proto.InternalMessageInfo

func (m *ListOrganizationsRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type ListOrganizationsResponse struct {
	Language             string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Organizations        []string `protobuf:"bytes,2,rep,name=organizations,proto3" json:"organizations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrganizationsResponse) Reset()         { *m = ListOrganizationsResponse{} }
func (m *ListOrganizationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListOrganizationsResponse) ProtoMessage()    {}
func (*ListOrganizationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{12}
}
func (m *ListOrganizationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrganizationsResponse.Unmarshal(m, b)
}
func (m *ListOrganizationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrganizationsResponse.Marshal(b, m, deterministic)
}
func (m *ListOrganizationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationsResponse.Merge(m, src)
}
func (m *ListOrganizationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListOrganizationsResponse.Size(m)
}
func (m *ListOrganizationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationsResponse proto.InternalMessageInfo

func (m *ListOrganizationsResponse) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *ListOrganizationsResponse) GetOrganizations() []string {
	if m != nil {
		return m.Organizations
	}
	return nil
}

type ListModulesRequest struct {
	Language             string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Organization         string   `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListModulesRequest) Reset()         { *m = ListModulesRequest{} }
func (m *ListModulesRequest) String() string { return proto.CompactTextString(m) }
func (*ListModulesRequest) ProtoMessage()    {}
func (*ListModulesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{13}
}
func (m *ListModulesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListModulesRequest.Unmarshal(m, b)
}
func (m *ListModulesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListModulesRequest.Marshal(b, m, deterministic)
}
func (m *ListModulesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListModulesRequest.Merge(m, src)
}
func (m *ListModulesRequest) XXX_Size() int {
	return xxx_messageInfo_ListModulesRequest.Size(m)
}
func (m *ListModulesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListModulesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListModulesRequest proto.InternalMessageInfo

func (m *ListModulesRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *ListModulesRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type ListModulesResponse struct {
	Language             string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Organization         string   `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
	Modules              []string `protobuf:"bytes,3,rep,name=modules,proto3" json:"modules,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListModulesResponse) Reset()         { *m = ListModulesResponse{} }
func (m *ListModulesResponse) String() string { return proto.CompactTextString(m) }
func (*ListModulesResponse) ProtoMessage()    {}
func (*ListModulesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0acf959f89d336e, []int{14}
}
func (m *ListModulesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListModulesResponse.Unmarshal(m, b)
}
func (m *ListModulesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListModulesResponse.Marshal(b, m, deterministic)
}
func (m *ListModulesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListModulesResponse.Merge(m, src)
}
func (m *ListModulesResponse) XXX_Size() int {
	return xxx_messageInfo_ListModulesResponse.Size(m)
}
func (m *ListModulesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListModulesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListModulesResponse proto.InternalMessageInfo

func (m *ListModulesResponse) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *ListModulesResponse) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *ListModulesResponse) GetModules() []string {
	if m != nil {
		return m.Modules
	}
	return nil
}

func init() {
	proto.RegisterEnum("cloud.deps.rds.api.Direction", Direction_name, Direction_value)
	proto.RegisterType((*SourceInformation)(nil), "cloud.deps.rds.api.SourceInformation")
	proto.RegisterType((*DependencyId)(nil), "cloud.deps.rds.api.DependencyId")
	proto.RegisterType((*PutRequest)(nil), "cloud.deps.rds.api.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "cloud.deps.rds.api.PutResponse")
	proto.RegisterType((*Request)(nil), "cloud.deps.rds.api.Request")
	proto.RegisterType((*Response)(nil), "cloud.deps.rds.api.Response")
	proto.RegisterType((*TieredResponse)(nil), "cloud.deps.rds.api.TieredResponse")
	proto.RegisterType((*GetSourcesRequest)(nil), "cloud.deps.rds.api.GetSourcesRequest")
	proto.RegisterType((*GetSourcesResponse)(nil), "cloud.deps.rds.api.GetSourcesResponse")
	proto.RegisterType((*ListLanguagesRequest)(nil), "cloud.deps.rds.api.ListLanguagesRequest")
	proto.RegisterType((*ListLanguagesResponse)(nil), "cloud.deps.rds.api.ListLanguagesResponse")
	proto.RegisterType((*ListOrganizationsRequest)(nil), "cloud.deps.rds.api.ListOrganizationsRequest")
	proto.RegisterType((*ListOrganizationsResponse)(nil), "cloud.deps.rds.api.ListOrganizationsResponse")
	proto.RegisterType((*ListModulesRequest)(nil), "cloud.deps.rds.api.ListModulesRequest")
	proto.RegisterType((*ListModulesResponse)(nil), "cloud.deps.rds.api.ListModulesResponse")
}

func init() { proto.RegisterFile("dts.proto", fileDescriptor_a0acf959f89d336e) }

var fileDescriptor_a0acf959f89d336e = []byte{
	// 897 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdd, 0x6e, 0xdc, 0x44,
	0x14, 0xc6, 0xd9, 0xe6, 0x67, 0xcf, 0xe6, 0x6f, 0x0f, 0xa4, 0x5a, 0xdc, 0x50, 0xa2, 0x51, 0xd3,
	0x6e, 0xab, 0x66, 0xdd, 0xa6, 0xa4, 0x45, 0x44, 0x45, 0x80, 0x42, 0x51, 0x51, 0x42, 0x2b, 0x67,
	0x01, 0xa9, 0x12, 0x42, 0xae, 0x3d, 0xb8, 0x56, 0xbd, 0x1e, 0xe3, 0x19, 0x83, 0x96, 0x55, 0x6e,
	0xe0, 0x12, 0x71, 0x85, 0xc4, 0x15, 0xcf, 0x81, 0xc4, 0x73, 0xf0, 0x0a, 0x5c, 0xf1, 0x14, 0xc8,
	0xe3, 0xb1, 0xd7, 0xf6, 0x3a, 0xbb, 0xdb, 0xe6, 0xce, 0x33, 0x73, 0xce, 0x77, 0xbe, 0xf3, 0x9d,
	0x99, 0x4f, 0x86, 0xa6, 0x23, 0x78, 0x2f, 0x8c, 0x98, 0x60, 0x88, 0xb6, 0xcf, 0x62, 0xa7, 0xe7,
	0xd0, 0x90, 0xf7, 0x22, 0x87, 0xf7, 0xac, 0xd0, 0xd3, 0xbb, 0xae, 0x27, 0x5e, 0xc4, 0xcf, 0x7b,
	0x36, 0x1b, 0x18, 0xc9, 0xc1, 0x9e, 0x8c, 0x31, 0x1c, 0xca, 0x0d, 0x2b, 0xf4, 0xe4, 0x56, 0x9a,
	0xad, 0x3f, 0x2b, 0x44, 0xba, 0x51, 0x68, 0xef, 0x51, 0x9b, 0xf1, 0x21, 0x17, 0x54, 0x2d, 0x5d,
	0x4b, 0xd0, 0x1f, 0xad, 0xa1, 0x21, 0x5e, 0x78, 0x91, 0xf3, 0x6d, 0x68, 0x45, 0x62, 0x68, 0xb8,
	0x8c, 0xb9, 0x3e, 0xb5, 0x42, 0x8f, 0xab, 0x4f, 0x09, 0x6a, 0x05, 0x01, 0x13, 0x96, 0xf0, 0x58,
	0xa0, 0xb0, 0xc9, 0x2e, 0xb4, 0x4f, 0x59, 0x1c, 0xd9, 0xf4, 0x71, 0xf0, 0x1d, 0x8b, 0x06, 0xf2,
	0x0c, 0x37, 0xa1, 0x11, 0x47, 0x7e, 0x67, 0x61, 0x47, 0xeb, 0x36, 0xcd, 0xe4, 0x93, 0x7c, 0x0e,
	0xab, 0x47, 0x34, 0xa4, 0x81, 0x43, 0x03, 0x7b, 0xf8, 0xd8, 0x41, 0x02, 0xab, 0x2c, 0x72, 0xad,
	0xc0, 0xfb, 0x49, 0x66, 0x74, 0x34, 0x19, 0x5a, 0xda, 0xc3, 0xcb, 0xb0, 0x34, 0x60, 0x4e, 0xec,
	0x53, 0x05, 0xa4, 0x56, 0xe4, 0x6f, 0x0d, 0xe0, 0x69, 0x2c, 0x4c, 0xfa, 0x7d, 0x4c, 0xb9, 0xc0,
	0x53, 0x68, 0xf3, 0x2a, 0x03, 0x89, 0xd7, 0xda, 0xdf, 0xed, 0x4d, 0xea, 0xd6, 0x9b, 0xa0, 0x6b,
	0x4e, 0xe6, 0xe3, 0x57, 0xb0, 0x31, 0xb0, 0x02, 0xcb, 0xa5, 0x03, 0x1a, 0x88, 0x47, 0x9e, 0x4f,
	0x79, 0x67, 0x61, 0xa7, 0xd1, 0x6d, 0xed, 0xdf, 0x2e, 0x42, 0x3a, 0x34, 0x85, 0x1c, 0xb7, 0x76,
	0x52, 0x4a, 0x32, 0xab, 0x20, 0xe4, 0x10, 0x5a, 0x92, 0x3a, 0x0f, 0x59, 0xc0, 0x29, 0x22, 0x5c,
	0xb2, 0x99, 0x43, 0x25, 0xdd, 0x45, 0x53, 0x7e, 0x63, 0x07, 0x96, 0x07, 0x94, 0x73, 0xcb, 0xcd,
	0xfa, 0xce, 0x96, 0xe4, 0x2f, 0x0d, 0x96, 0xb3, 0xae, 0x75, 0x58, 0xf1, 0xad, 0xc0, 0x8d, 0x93,
	0xb0, 0x54, 0xbc, 0x7c, 0x9d, 0x08, 0x97, 0x8e, 0x37, 0x13, 0x2e, 0x5d, 0x4d, 0x88, 0xbe, 0x38,
	0x55, 0xf4, 0xa5, 0xa2, 0xe8, 0x78, 0x08, 0x4d, 0xc7, 0x8b, 0xa8, 0x2d, 0x13, 0x97, 0x77, 0xb4,
	0xee, 0xfa, 0xfe, 0x3b, 0x75, 0xea, 0x1e, 0x65, 0x41, 0xe6, 0x38, 0x9e, 0x1c, 0xc3, 0x4a, 0xde,
	0xf2, 0x47, 0x00, 0x4e, 0x2e, 0x97, 0x9a, 0xd3, 0x4e, 0x2d, 0x52, 0xe1, 0xbe, 0x98, 0x85, 0x1c,
	0xf2, 0x08, 0xd6, 0xfb, 0x1e, 0x8d, 0xa8, 0x93, 0x63, 0xbe, 0x07, 0x97, 0x84, 0x47, 0xa3, 0x8e,
	0x26, 0x47, 0x34, 0x1b, 0x4d, 0x46, 0x93, 0x97, 0xd0, 0xfe, 0x8c, 0x8a, 0xf4, 0x3a, 0xf0, 0x79,
	0x74, 0xbd, 0x80, 0x7e, 0xe4, 0x14, 0xb0, 0x58, 0x4c, 0x11, 0x7f, 0x08, 0x4b, 0xe9, 0xdd, 0x7b,
	0xb5, 0x0b, 0xab, 0x92, 0xc8, 0x65, 0x78, 0xeb, 0xd8, 0xe3, 0xe2, 0x58, 0x11, 0xcc, 0x9a, 0x20,
	0x07, 0xb0, 0x55, 0xd9, 0x57, 0xf5, 0xb6, 0xa1, 0x99, 0x75, 0xc3, 0xa5, 0x5a, 0x4d, 0x73, 0xbc,
	0x41, 0xee, 0x43, 0x27, 0x49, 0x7b, 0x52, 0xe8, 0x67, 0x1e, 0x5d, 0xc8, 0x37, 0xf0, 0x76, 0x4d,
	0x9e, 0x2a, 0x39, 0x4d, 0xd0, 0x6b, 0xb0, 0x56, 0x14, 0x2f, 0x7d, 0x63, 0x4d, 0xb3, 0xbc, 0x49,
	0xfa, 0x80, 0x09, 0xfc, 0x89, 0x14, 0xf2, 0xb5, 0x06, 0xb5, 0x30, 0x39, 0x28, 0xc2, 0xe0, 0xcd,
	0x12, 0xea, 0x1c, 0x74, 0xe7, 0x80, 0x95, 0xaf, 0x37, 0x85, 0xec, 0x34, 0x64, 0x33, 0xd9, 0xf2,
	0xd6, 0x4d, 0x68, 0xe6, 0x8f, 0x03, 0x57, 0x61, 0xe5, 0xcb, 0xa7, 0xa7, 0x7d, 0xf3, 0xd3, 0x8f,
	0x4f, 0x36, 0xdf, 0xc0, 0x75, 0x80, 0xa3, 0x27, 0x5f, 0x7f, 0xa1, 0xd6, 0xda, 0xfe, 0x7f, 0x2b,
	0xd0, 0x1e, 0x5f, 0xd8, 0x7e, 0x64, 0xd9, 0x2f, 0x69, 0x84, 0x36, 0x34, 0xc2, 0x58, 0xe0, 0xd5,
	0xba, 0x3b, 0x32, 0xf6, 0x43, 0xfd, 0xdd, 0x73, 0xcf, 0xd3, 0x16, 0xc9, 0x95, 0x9f, 0xff, 0xf9,
	0xf7, 0xf7, 0x85, 0x2d, 0xb2, 0x69, 0xfc, 0x70, 0xd7, 0xc8, 0xdf, 0x95, 0x47, 0xf9, 0x07, 0xda,
	0x2d, 0xfc, 0x55, 0x83, 0x0d, 0x97, 0x8a, 0xa3, 0xc2, 0x36, 0x5e, 0xa9, 0x43, 0xcc, 0xca, 0x6d,
	0xd7, 0x1f, 0xaa, 0x5a, 0x87, 0xb2, 0xd6, 0x01, 0xde, 0x4b, 0x6a, 0x8d, 0x32, 0x25, 0xcf, 0x4a,
	0x65, 0x8d, 0x51, 0x51, 0xc1, 0x33, 0x63, 0x94, 0x2a, 0x76, 0x76, 0x47, 0xc3, 0x5f, 0x34, 0x68,
	0xb9, 0x54, 0xf4, 0x59, 0xc8, 0x7c, 0xe6, 0x0e, 0x2f, 0xc2, 0xe4, 0x81, 0x64, 0x72, 0x17, 0x8d,
	0x0a, 0x13, 0xa1, 0xb0, 0xa7, 0xb0, 0xf8, 0x43, 0x83, 0x76, 0x81, 0x45, 0x6a, 0x3e, 0xd3, 0xb9,
	0x90, 0xba, 0xc3, 0xb2, 0x6b, 0x91, 0x0f, 0x25, 0xa3, 0xf7, 0xf1, 0xfe, 0x2b, 0x32, 0x32, 0x84,
	0xc4, 0xb9, 0xa3, 0xe1, 0x9f, 0x1a, 0x80, 0x9b, 0xbb, 0x0a, 0xd6, 0xba, 0xc7, 0x84, 0xc5, 0xe9,
	0xd7, 0x67, 0x85, 0x29, 0x7e, 0x0f, 0x25, 0xbf, 0x07, 0x78, 0x50, 0xe1, 0x97, 0x9a, 0x0f, 0x9f,
	0x4d, 0x6f, 0x04, 0x6b, 0x7e, 0xd1, 0x86, 0xb0, 0x5b, 0x57, 0xb9, 0xce, 0xc1, 0xf4, 0x9b, 0x73,
	0x44, 0x2a, 0x9a, 0x5b, 0x92, 0xe6, 0x06, 0xae, 0x25, 0x34, 0x73, 0x33, 0x93, 0x43, 0xf3, 0xab,
	0xae, 0x84, 0xb7, 0xcf, 0xc3, 0xad, 0x33, 0x3d, 0x7d, 0x6f, 0xce, 0x68, 0xc5, 0xe4, 0x9a, 0x64,
	0x72, 0x15, 0xb7, 0x2b, 0x82, 0x95, 0xec, 0x0c, 0x7f, 0xd3, 0xa0, 0xe5, 0x8f, 0x9d, 0x07, 0xaf,
	0x9f, 0x57, 0xa4, 0x6c, 0x78, 0xfa, 0x8d, 0x99, 0x71, 0x8a, 0xc6, 0x9e, 0xa4, 0x71, 0x03, 0x77,
	0x2b, 0x34, 0x94, 0x11, 0x55, 0xe6, 0xf6, 0xc9, 0xe2, 0xb3, 0x86, 0x15, 0x7a, 0xcf, 0x97, 0xe4,
	0xff, 0xdc, 0xbd, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x49, 0x49, 0x71, 0x27, 0x76, 0x0a, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DependencyTrackerClient is the client API for DependencyTracker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DependencyTrackerClient interface {
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
	GetDependencies(ctx context.Context, in *Request, opts ...grpc.CallOption) (DependencyTracker_GetDependenciesClient, error)
	GetTopology(ctx context.Context, in *Request, opts ...grpc.CallOption) (DependencyTracker_GetTopologyClient, error)
	GetTopologyTiered(ctx context.Context, in *Request, opts ...grpc.CallOption) (DependencyTracker_GetTopologyTieredClient, error)
	GetSources(ctx context.Context, in *GetSourcesRequest, opts ...grpc.CallOption) (DependencyTracker_GetSourcesClient, error)
	ListLanguages(ctx context.Context, in *ListLanguagesRequest, opts ...grpc.CallOption) (*ListLanguagesResponse, error)
	ListOrganizations(ctx context.Context, in *ListOrganizationsRequest, opts ...grpc.CallOption) (*ListOrganizationsResponse, error)
	ListModules(ctx context.Context, in *ListModulesRequest, opts ...grpc.CallOption) (*ListModulesResponse, error)
}

type dependencyTrackerClient struct {
	cc *grpc.ClientConn
}

func NewDependencyTrackerClient(cc *grpc.ClientConn) DependencyTrackerClient {
	return &dependencyTrackerClient{cc}
}

func (c *dependencyTrackerClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := c.cc.Invoke(ctx, "/cloud.deps.rds.api.DependencyTracker/put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyTrackerClient) GetDependencies(ctx context.Context, in *Request, opts ...grpc.CallOption) (DependencyTracker_GetDependenciesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DependencyTracker_serviceDesc.Streams[0], "/cloud.deps.rds.api.DependencyTracker/getDependencies", opts...)
	if err != nil {
		return nil, err
	}
	x := &dependencyTrackerGetDependenciesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DependencyTracker_GetDependenciesClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type dependencyTrackerGetDependenciesClient struct {
	grpc.ClientStream
}

func (x *dependencyTrackerGetDependenciesClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dependencyTrackerClient) GetTopology(ctx context.Context, in *Request, opts ...grpc.CallOption) (DependencyTracker_GetTopologyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DependencyTracker_serviceDesc.Streams[1], "/cloud.deps.rds.api.DependencyTracker/getTopology", opts...)
	if err != nil {
		return nil, err
	}
	x := &dependencyTrackerGetTopologyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DependencyTracker_GetTopologyClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type dependencyTrackerGetTopologyClient struct {
	grpc.ClientStream
}

func (x *dependencyTrackerGetTopologyClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dependencyTrackerClient) GetTopologyTiered(ctx context.Context, in *Request, opts ...grpc.CallOption) (DependencyTracker_GetTopologyTieredClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DependencyTracker_serviceDesc.Streams[2], "/cloud.deps.rds.api.DependencyTracker/getTopologyTiered", opts...)
	if err != nil {
		return nil, err
	}
	x := &dependencyTrackerGetTopologyTieredClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DependencyTracker_GetTopologyTieredClient interface {
	Recv() (*TieredResponse, error)
	grpc.ClientStream
}

type dependencyTrackerGetTopologyTieredClient struct {
	grpc.ClientStream
}

func (x *dependencyTrackerGetTopologyTieredClient) Recv() (*TieredResponse, error) {
	m := new(TieredResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dependencyTrackerClient) GetSources(ctx context.Context, in *GetSourcesRequest, opts ...grpc.CallOption) (DependencyTracker_GetSourcesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DependencyTracker_serviceDesc.Streams[3], "/cloud.deps.rds.api.DependencyTracker/getSources", opts...)
	if err != nil {
		return nil, err
	}
	x := &dependencyTrackerGetSourcesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DependencyTracker_GetSourcesClient interface {
	Recv() (*GetSourcesResponse, error)
	grpc.ClientStream
}

type dependencyTrackerGetSourcesClient struct {
	grpc.ClientStream
}

func (x *dependencyTrackerGetSourcesClient) Recv() (*GetSourcesResponse, error) {
	m := new(GetSourcesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dependencyTrackerClient) ListLanguages(ctx context.Context, in *ListLanguagesRequest, opts ...grpc.CallOption) (*ListLanguagesResponse, error) {
	out := new(ListLanguagesResponse)
	err := c.cc.Invoke(ctx, "/cloud.deps.rds.api.DependencyTracker/listLanguages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyTrackerClient) ListOrganizations(ctx context.Context, in *ListOrganizationsRequest, opts ...grpc.CallOption) (*ListOrganizationsResponse, error) {
	out := new(ListOrganizationsResponse)
	err := c.cc.Invoke(ctx, "/cloud.deps.rds.api.DependencyTracker/listOrganizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyTrackerClient) ListModules(ctx context.Context, in *ListModulesRequest, opts ...grpc.CallOption) (*ListModulesResponse, error) {
	out := new(ListModulesResponse)
	err := c.cc.Invoke(ctx, "/cloud.deps.rds.api.DependencyTracker/listModules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DependencyTrackerServer is the server API for DependencyTracker service.
type DependencyTrackerServer interface {
	Put(context.Context, *PutRequest) (*PutResponse, error)
	GetDependencies(*Request, DependencyTracker_GetDependenciesServer) error
	GetTopology(*Request, DependencyTracker_GetTopologyServer) error
	GetTopologyTiered(*Request, DependencyTracker_GetTopologyTieredServer) error
	GetSources(*GetSourcesRequest, DependencyTracker_GetSourcesServer) error
	ListLanguages(context.Context, *ListLanguagesRequest) (*ListLanguagesResponse, error)
	ListOrganizations(context.Context, *ListOrganizationsRequest) (*ListOrganizationsResponse, error)
	ListModules(context.Context, *ListModulesRequest) (*ListModulesResponse, error)
}

// UnimplementedDependencyTrackerServer can be embedded to have forward compatible implementations.
type UnimplementedDependencyTrackerServer struct {
}

func (*UnimplementedDependencyTrackerServer) Put(ctx context.Context, req *PutRequest) (*PutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Put not implemented")
}
func (*UnimplementedDependencyTrackerServer) GetDependencies(req *Request, srv DependencyTracker_GetDependenciesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetDependencies not implemented")
}
func (*UnimplementedDependencyTrackerServer) GetTopology(req *Request, srv DependencyTracker_GetTopologyServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTopology not implemented")
}
func (*UnimplementedDependencyTrackerServer) GetTopologyTiered(req *Request, srv DependencyTracker_GetTopologyTieredServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTopologyTiered not implemented")
}
func (*UnimplementedDependencyTrackerServer) GetSources(req *GetSourcesRequest, srv DependencyTracker_GetSourcesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetSources not implemented")
}
func (*UnimplementedDependencyTrackerServer) ListLanguages(ctx context.Context, req *ListLanguagesRequest) (*ListLanguagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLanguages not implemented")
}
func (*UnimplementedDependencyTrackerServer) ListOrganizations(ctx context.Context, req *ListOrganizationsRequest) (*ListOrganizationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOrganizations not implemented")
}
func (*UnimplementedDependencyTrackerServer) ListModules(ctx context.Context, req *ListModulesRequest) (*ListModulesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListModules not implemented")
}

func RegisterDependencyTrackerServer(s *grpc.Server, srv DependencyTrackerServer) {
	s.RegisterService(&_DependencyTracker_serviceDesc, srv)
}

func _DependencyTracker_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyTrackerServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.deps.rds.api.DependencyTracker/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyTrackerServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyTracker_GetDependencies_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DependencyTrackerServer).GetDependencies(m, &dependencyTrackerGetDependenciesServer{stream})
}

type DependencyTracker_GetDependenciesServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type dependencyTrackerGetDependenciesServer struct {
	grpc.ServerStream
}

func (x *dependencyTrackerGetDependenciesServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func _DependencyTracker_GetTopology_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DependencyTrackerServer).GetTopology(m, &dependencyTrackerGetTopologyServer{stream})
}

type DependencyTracker_GetTopologyServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type dependencyTrackerGetTopologyServer struct {
	grpc.ServerStream
}

func (x *dependencyTrackerGetTopologyServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func _DependencyTracker_GetTopologyTiered_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DependencyTrackerServer).GetTopologyTiered(m, &dependencyTrackerGetTopologyTieredServer{stream})
}

type DependencyTracker_GetTopologyTieredServer interface {
	Send(*TieredResponse) error
	grpc.ServerStream
}

type dependencyTrackerGetTopologyTieredServer struct {
	grpc.ServerStream
}

func (x *dependencyTrackerGetTopologyTieredServer) Send(m *TieredResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DependencyTracker_GetSources_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetSourcesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DependencyTrackerServer).GetSources(m, &dependencyTrackerGetSourcesServer{stream})
}

type DependencyTracker_GetSourcesServer interface {
	Send(*GetSourcesResponse) error
	grpc.ServerStream
}

type dependencyTrackerGetSourcesServer struct {
	grpc.ServerStream
}

func (x *dependencyTrackerGetSourcesServer) Send(m *GetSourcesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DependencyTracker_ListLanguages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLanguagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyTrackerServer).ListLanguages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.deps.rds.api.DependencyTracker/ListLanguages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyTrackerServer).ListLanguages(ctx, req.(*ListLanguagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyTracker_ListOrganizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrganizationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyTrackerServer).ListOrganizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.deps.rds.api.DependencyTracker/ListOrganizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyTrackerServer).ListOrganizations(ctx, req.(*ListOrganizationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyTracker_ListModules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListModulesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyTrackerServer).ListModules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.deps.rds.api.DependencyTracker/ListModules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyTrackerServer).ListModules(ctx, req.(*ListModulesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DependencyTracker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.deps.rds.api.DependencyTracker",
	HandlerType: (*DependencyTrackerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "put",
			Handler:    _DependencyTracker_Put_Handler,
		},
		{
			MethodName: "listLanguages",
			Handler:    _DependencyTracker_ListLanguages_Handler,
		},
		{
			MethodName: "listOrganizations",
			Handler:    _DependencyTracker_ListOrganizations_Handler,
		},
		{
			MethodName: "listModules",
			Handler:    _DependencyTracker_ListModules_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "getDependencies",
			Handler:       _DependencyTracker_GetDependencies_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "getTopology",
			Handler:       _DependencyTracker_GetTopology_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "getTopologyTiered",
			Handler:       _DependencyTracker_GetTopologyTiered_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "getSources",
			Handler:       _DependencyTracker_GetSources_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "dts.proto",
}
